{"version":3,"sources":["me.svg","Components/Index.js","Components/Resume.js","Components/Projects.js","Components/Contacts.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Index","react_default","a","createElement","className","src","Pic","alt","Component","Resume","Projects","Contacts","App","Link","to","Switch","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oSC6BzBC,mLAzBP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAKC,IAAI,MAAMH,UAAU,wDAEnCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,iCACIH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,uJACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QACTH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAChBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBADb,QAEAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAFb,QAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BAHb,QAIAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAIzBH,EAAAC,EAAAC,cAAA,oBApBAK,aCULC,mLARP,OACIR,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,kCAJKK,aCUNE,mLARP,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,mCAJOK,aCURG,mLARP,OACIV,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,8BAJOK,aC2CRI,mLAhCX,OAEIX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACbH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,eAAeU,GAAG,KAAlC,IAAuCb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAApD,KACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACZH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,WAAWU,GAAG,KAA9B,SAEFb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,WAAWU,GAAG,WAA9B,WAEFb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,WAAWU,GAAG,aAA9B,aAEFb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACZH,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMT,UAAU,WAAWU,GAAG,aAA9B,eAKNb,EAAAC,EAAAC,cAACY,EAAA,EAAD,KACEd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWnB,IACjCC,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQE,KAAK,UAAUC,UAAWV,IAClCR,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQE,KAAK,YAAYC,UAAWT,IACpCT,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAQE,KAAK,YAAYC,UAAWR,aA3B9BH,aCCEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACLzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,KACI1B,EAAAC,EAAAC,cAACyB,EAAD,OAEFC,SAASC,eAAe,SDqHxB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.18e7c63a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.0b3268e6.svg\";","import React, { Component } from 'react';\nimport Pic from '../me.svg';\nclass Index extends Component {\n    render() {\n        return (\n            <div className=\"imgradient\">\n                <div className=\"container\">\n                    <img src={Pic} alt=\"pic\" className=\"my-4 myimage img-fluid img-thumbnail rounded-circle\" />\n\n                    <div className=\"jumbotron py-2\">\n                        <h1 className=\"display-4\">Full Stack Software Developer</h1>\n                            <hr/>\n                            <p className=\"lead\">Laravel &nbsp; Nodejs &nbsp; Express &nbsp; Django &nbsp; Flask &nbsp; Vuejs &nbsp; Reactjs &nbsp; Postgresql &nbsp; MongoDB &nbsp; Mysql &nbsp; (Docker & Kubernetes )</p>\n                            <p className=\"lead\">\n                                <span className=\"iconSize\">\n                                <i className=\"fab fa-linkedin\"></i> &nbsp;\n                                <i className=\"fab fa-github\"></i> &nbsp;\n                                <i className=\"fab fa-twitter-square\"></i> &nbsp;\n                                <i className=\"fab fa-medium\"></i>\n                                </span>\n                            </p>\n                    </div>\n                    <br/>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Index;\n","import React, { Component } from 'react';\n\nclass Resume extends Component {\n    render() {\n        return (\n            <div>\n                <h2> Resume Home</h2>\n            </div>\n        );\n    }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\n\nclass Projects extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Projects Home</h2>\n            </div>\n        );\n    }\n}\n\nexport default Projects;\n","import React, { Component } from 'react';\n\nclass Contacts extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Contacts</h2>\n            </div>\n        );\n    }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport { Switch, Route, Link } from 'react-router-dom'; // import the react-router-dom components\n\n\nimport Index from '../src/Components/Index';\nimport Resume from '../src/Components/Resume';\nimport Projects from '../src/Components/Projects';\nimport Contacts from '../src/Components/Contacts';\n\nclass App extends Component {\n  render() {\n    return (\n\n        <div className=\"App\">\n          <nav className=\"navbar navbar-expand-lg navbar-light  bg-light\">\n            <Link className=\"navbar-brand\" to=\"/\"> <i className=\"fas fa-users-cog\"></i> </Link>\n            <ul className=\"navbar-nav\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/\">Home</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/resume\">Resume</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/projects\">Projects</Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/contacts\">Contacts</Link>\n              </li>\n            </ul>\n          </nav>\n\n          <Switch>\n            <Route exact path='/' component={Index} />\n            <Route  path='/resume' component={Resume}/>\n            <Route  path='/projects' component={Projects} />\n            <Route  path='/contacts' component={Contacts} />\n          </Switch>\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render((\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>)\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}